<featureType>
  <id>FeatureTypeInfoImpl-435b19e2:19657044af4:5c2a</id>
  <name>test_geoserver_line_new</name>
  <nativeName>test_geoserver_line_new</nativeName>
  <namespace>
    <id>NamespaceInfoImpl-1c443fee:182c0f3f209:-7ffd</id>
  </namespace>
  <title>test_geoserver_line_new</title>
  <keywords>
    <string>features</string>
    <string>test_geoserver_line_new</string>
  </keywords>
  <srs>EPSG:4326</srs>
  <nativeBoundingBox>
    <minx>126.811391</minx>
    <maxx>127.1708790328</maxx>
    <miny>37.4464254627</miny>
    <maxy>37.6776468665</maxy>
  </nativeBoundingBox>
  <latLonBoundingBox>
    <minx>126.811391</minx>
    <maxx>127.1708790328</maxx>
    <miny>37.4464254627</miny>
    <maxy>37.6776468665</maxy>
  </latLonBoundingBox>
  <projectionPolicy>FORCE_DECLARED</projectionPolicy>
  <enabled>true</enabled>
  <metadata>
    <entry key="JDBC_VIRTUAL_TABLE">
      <virtualTable>
        <name>test_geoserver_line_new</name>
        <sql>select json_data&#xd;
     , geo&#xd;
     , (json_data::json-&gt;&gt;&apos;fclt_nm&apos;) as fclt_nm&#xd;
     , layrId&#xd;
     , case when geometrytype(geo) in (&apos;LINESTRING&apos;, &apos;MUTILINESTRING&apos;) then &apos;LINE&apos;&#xd;
            when geometrytype(geo) in (&apos;POINT&apos;, &apos;MUTIPOINT&apos;) then &apos;POINT&apos;&#xd;
            when geometrytype(geo) in (&apos;POLYGON&apos;, &apos;MUTIPOLYGON&apos;) then &apos;POLYGON&apos;&#xd;
            else geometrytype(geo)&#xd;
       end as geom_type&#xd;
     , (json_data::json-&gt;&gt;&apos;zindex&apos;)::integer as zindex&#xd;
     , (json_data::json-&gt;&gt;&apos;is_style_0&apos;) as is_style_0&#xd;
     , (json_data::json-&gt;&gt;&apos;color_0&apos;) as color_0&#xd;
     , (json_data::json-&gt;&gt;&apos;weight_0&apos;) as weight_0&#xd;
     , (json_data::json-&gt;&gt;&apos;capstyle_0&apos;) as capStyle_0&#xd;
     , (json_data::json-&gt;&gt;&apos;joinstyle_0&apos;) as joinStyle_0&#xd;
     , (json_data::json-&gt;&gt;&apos;dasharray_0&apos;) as dashArray_0&#xd;
     , (json_data::json-&gt;&gt;&apos;opacity_0&apos;)::float as opacity_0&#xd;
     , coalesce(json_data::json-&gt;&gt;&apos;isoutline_0&apos;,&apos;false&apos;) as isOutline_0&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinecolor_0&apos;) as outlineColor_0&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinewidth_0&apos;) as outlineWeight_0 &#xd;
     , (json_data::json-&gt;&gt;&apos;outlineopacity_0&apos;)::float as outlineOpacity_0&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinecapstyle_0&apos;) as outlineCapStyle_0&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinejoinstyle_0&apos;) as outlineJoinStyle_0&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinedasharray_0&apos;) as outlineDashArray_0&#xd;
     , (json_data::json-&gt;&gt;&apos;is_style_1&apos;) as is_style_1&#xd;
     , (json_data::json-&gt;&gt;&apos;color_1&apos;) as color_1&#xd;
     , (json_data::json-&gt;&gt;&apos;weight_1&apos;) as weight_1&#xd;
     , (json_data::json-&gt;&gt;&apos;capstyle_1&apos;) as capStyle_1&#xd;
     , (json_data::json-&gt;&gt;&apos;joinstyle_1&apos;) as joinStyle_1&#xd;
     , (json_data::json-&gt;&gt;&apos;dasharray_1&apos;) as dashArray_1&#xd;
     , (json_data::json-&gt;&gt;&apos;opacity_1&apos;)::float as opacity_1&#xd;
     , coalesce(json_data::json-&gt;&gt;&apos;isoutline_1&apos;,&apos;false&apos;) as isOutline_1&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinecolor_1&apos;) as outlineColor_1&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinewidth_1&apos;) as outlineWeight_1 &#xd;
     , (json_data::json-&gt;&gt;&apos;outlineopacity_1&apos;)::float as outlineOpacity_1&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinecapstyle_1&apos;) as outlineCapStyle_1&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinejoinstyle_1&apos;) as outlineJoinStyle_1&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinedasharray_1&apos;) as outlineDashArray_1&#xd;
     , (json_data::json-&gt;&gt;&apos;is_style_2&apos;) as is_style_2&#xd;
     , (json_data::json-&gt;&gt;&apos;color_2&apos;) as color_2&#xd;
     , (json_data::json-&gt;&gt;&apos;weight_2&apos;) as weight_2&#xd;
     , (json_data::json-&gt;&gt;&apos;capstyle_2&apos;) as capStyle_2&#xd;
     , (json_data::json-&gt;&gt;&apos;joinstyle_2&apos;) as joinStyle_2&#xd;
     , (json_data::json-&gt;&gt;&apos;dasharray_2&apos;) as dashArray_2&#xd;
     , (json_data::json-&gt;&gt;&apos;opacity_2&apos;)::float as opacity_2&#xd;
     , coalesce(json_data::json-&gt;&gt;&apos;isoutline_2&apos;,&apos;false&apos;) as isOutline_2&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinecolor_2&apos;) as outlineColor_2&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinewidth_2&apos;) as outlineWeight_2 &#xd;
     , (json_data::json-&gt;&gt;&apos;outlineopacity_2&apos;)::float as outlineOpacity_2&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinecapstyle_2&apos;) as outlineCapStyle_2&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinejoinstyle_2&apos;) as outlineJoinStyle_2&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinedasharray_2&apos;) as outlineDashArray_2&#xd;
     , (json_data::json-&gt;&gt;&apos;is_style_3&apos;) as is_style_3&#xd;
     , (json_data::json-&gt;&gt;&apos;color_3&apos;) as color_3&#xd;
     , (json_data::json-&gt;&gt;&apos;weight_3&apos;) as weight_3&#xd;
     , (json_data::json-&gt;&gt;&apos;capstyle_3&apos;) as capStyle_3&#xd;
     , (json_data::json-&gt;&gt;&apos;joinstyle_3&apos;) as joinStyle_3&#xd;
     , (json_data::json-&gt;&gt;&apos;dasharray_3&apos;) as dashArray_3&#xd;
     , (json_data::json-&gt;&gt;&apos;opacity_3&apos;)::float as opacity_3&#xd;
     , coalesce(json_data::json-&gt;&gt;&apos;isoutline_3&apos;,&apos;false&apos;) as isOutline_3&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinecolor_3&apos;) as outlineColor_3&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinewidth_3&apos;) as outlineWeight_3 &#xd;
     , (json_data::json-&gt;&gt;&apos;outlineopacity_3&apos;)::float as outlineOpacity_3&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinecapstyle_3&apos;) as outlineCapStyle_3&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinejoinstyle_3&apos;) as outlineJoinStyle_3&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinedasharray_3&apos;) as outlineDashArray_3&#xd;
     , (json_data::json-&gt;&gt;&apos;is_style_4&apos;) as is_style_4&#xd;
     , (json_data::json-&gt;&gt;&apos;color_4&apos;) as color_4&#xd;
     , (json_data::json-&gt;&gt;&apos;weight_4&apos;) as weight_4&#xd;
     , (json_data::json-&gt;&gt;&apos;capstyle_4&apos;) as capStyle_4&#xd;
     , (json_data::json-&gt;&gt;&apos;joinstyle_4&apos;) as joinStyle_4&#xd;
     , (json_data::json-&gt;&gt;&apos;dasharray_4&apos;) as dashArray_4&#xd;
     , (json_data::json-&gt;&gt;&apos;opacity_4&apos;)::float as opacity_4&#xd;
     , coalesce(json_data::json-&gt;&gt;&apos;isoutline_4&apos;,&apos;false&apos;) as isOutline_4&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinecolor_4&apos;) as outlineColor_4&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinewidth_4&apos;) as outlineWeight_4 &#xd;
     , (json_data::json-&gt;&gt;&apos;outlineopacity_4&apos;)::float as outlineOpacity_4&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinecapstyle_4&apos;) as outlineCapStyle_4&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinejoinstyle_4&apos;) as outlineJoinStyle_4&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinedasharray_4&apos;) as outlineDashArray_4&#xd;
     , (json_data::json-&gt;&gt;&apos;color_default&apos;) as color_default&#xd;
     , (json_data::json-&gt;&gt;&apos;weight_default&apos;) as weight_default&#xd;
     , (json_data::json-&gt;&gt;&apos;capstyle_default&apos;) as capStyle_default&#xd;
     , (json_data::json-&gt;&gt;&apos;joinstyle_default&apos;) as joinStyle_default&#xd;
     , (json_data::json-&gt;&gt;&apos;dasharray_default&apos;) as dashArray_default&#xd;
     , (json_data::json-&gt;&gt;&apos;opacity_default&apos;)::float as opacity_default&#xd;
     , coalesce(json_data::json-&gt;&gt;&apos;isoutline_default&apos;,&apos;false&apos;) as isOutline_default&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinecolor_default&apos;) as outlineColor_default&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinewidth_default&apos;) as outlineWeight_default &#xd;
     , (json_data::json-&gt;&gt;&apos;outlineopacity_default&apos;)::float as outlineOpacity_default&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinecapstyle_default&apos;) as outlineCapStyle_default&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinejoinstyle_default&apos;) as outlineJoinStyle_default&#xd;
     , (json_data::json-&gt;&gt;&apos;outlinedasharray_default&apos;) as outlineDashArray_default&#xd;
     , (json_data::json-&gt;&gt;&apos;labeltext&apos;) as labeltext&#xd;
     , (json_data::json-&gt;&gt;&apos;labeltext_0&apos;) as labeltext_0&#xd;
     , (json_data::json-&gt;&gt;&apos;labeltext_1&apos;) as labeltext_1&#xd;
     , (json_data::json-&gt;&gt;&apos;labeltext_2&apos;) as labeltext_2&#xd;
     , (json_data::json-&gt;&gt;&apos;labeltext_3&apos;) as labeltext_3&#xd;
     , (json_data::json-&gt;&gt;&apos;labeltext_4&apos;) as labeltext_4&#xd;
     , (json_data::json-&gt;&gt;&apos;labeltext_default&apos;) as labeltext_default&#xd;
  from test_geoserver_line_new(&#xd;
CAST(&apos;%layernm%&apos; AS text),&#xd;
COALESCE(NULLIF(&apos;%minx%&apos;,&apos;&apos;)::double precision,0.0),&#xd;
COALESCE(NULLIF(&apos;%miny%&apos;,&apos;&apos;)::double precision,0.0),&#xd;
COALESCE(NULLIF(&apos;%maxx%&apos;,&apos;&apos;)::double precision,0.0),&#xd;
COALESCE(NULLIF(&apos;%maxy%&apos;,&apos;&apos;)::double precision,0.0),&#xd;
COALESCE(NULLIF(&apos;%zoomlv%&apos;,&apos;&apos;)::integer,12),&#xd;
CAST(&apos;%sym_id%&apos; AS text),&#xd;
CAST(&apos;%uuid%&apos; AS text),&#xd;
CAST(lower(&apos;%showlabel%&apos;) = &apos;true&apos; AS boolean)&#xd;
)
</sql>
        <escapeSql>false</escapeSql>
        <geometry>
          <name>geo</name>
          <type>Geometry</type>
          <srid>-1</srid>
        </geometry>
        <parameter>
          <name>zoomlv</name>
        </parameter>
        <parameter>
          <name>miny</name>
        </parameter>
        <parameter>
          <name>minx</name>
        </parameter>
        <parameter>
          <name>maxy</name>
        </parameter>
        <parameter>
          <name>maxx</name>
        </parameter>
        <parameter>
          <name>sym_id</name>
        </parameter>
        <parameter>
          <name>showlabel</name>
        </parameter>
        <parameter>
          <name>uuid</name>
        </parameter>
        <parameter>
          <name>layernm</name>
        </parameter>
      </virtualTable>
    </entry>
  </metadata>
  <store class="dataStore">
    <id>DataStoreInfoImpl--57b35a39:193482836be:-8000</id>
  </store>
  <serviceConfiguration>false</serviceConfiguration>
  <simpleConversionEnabled>false</simpleConversionEnabled>
  <maxFeatures>0</maxFeatures>
  <numDecimals>0</numDecimals>
  <padWithZeros>false</padWithZeros>
  <forcedDecimal>false</forcedDecimal>
  <overridingServiceSRS>false</overridingServiceSRS>
  <skipNumberMatched>false</skipNumberMatched>
  <circularArcPresent>false</circularArcPresent>
</featureType>